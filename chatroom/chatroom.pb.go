// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chatroom.proto

package routeguide

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Nickname             string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ca54b9e3ca377ae, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

type Message struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChatId               int64    `protobuf:"varint,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Sender               int64    `protobuf:"varint,3,opt,name=sender,proto3" json:"sender,omitempty"`
	Content              string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	SendTime             int64    `protobuf:"varint,5,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ca54b9e3ca377ae, []int{1}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Message) GetChatId() int64 {
	if m != nil {
		return m.ChatId
	}
	return 0
}

func (m *Message) GetSender() int64 {
	if m != nil {
		return m.Sender
	}
	return 0
}

func (m *Message) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Message) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ca54b9e3ca377ae, []int{2}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Group struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Members              []*User  `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Group) Reset()         { *m = Group{} }
func (m *Group) String() string { return proto.CompactTextString(m) }
func (*Group) ProtoMessage()    {}
func (*Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_9ca54b9e3ca377ae, []int{3}
}

func (m *Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Group.Unmarshal(m, b)
}
func (m *Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Group.Marshal(b, m, deterministic)
}
func (m *Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Group.Merge(m, src)
}
func (m *Group) XXX_Size() int {
	return xxx_messageInfo_Group.Size(m)
}
func (m *Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Group proto.InternalMessageInfo

func (m *Group) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Group) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Group) GetMembers() []*User {
	if m != nil {
		return m.Members
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "routeguide.User")
	proto.RegisterType((*Message)(nil), "routeguide.Message")
	proto.RegisterType((*Empty)(nil), "routeguide.Empty")
	proto.RegisterType((*Group)(nil), "routeguide.Group")
}

func init() {
	proto.RegisterFile("chatroom.proto", fileDescriptor_9ca54b9e3ca377ae)
}

var fileDescriptor_9ca54b9e3ca377ae = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xbf, 0x4b, 0xfc, 0x40,
	0x10, 0xc5, 0xbf, 0xf9, 0x9d, 0x9b, 0x2f, 0x1c, 0x3a, 0x82, 0x2e, 0x67, 0x13, 0x52, 0x05, 0x8b,
	0x20, 0xb1, 0xb5, 0x13, 0x11, 0x0b, 0x9b, 0xa0, 0x58, 0x1e, 0xb9, 0xec, 0x70, 0xb7, 0xc8, 0x66,
	0xc3, 0xee, 0xa6, 0xb0, 0xf4, 0x3f, 0x97, 0xdd, 0x78, 0x1a, 0xb8, 0x6e, 0xde, 0xe3, 0x3d, 0xe6,
	0xf1, 0x81, 0x75, 0x7f, 0xe8, 0xac, 0x56, 0x4a, 0xd6, 0xa3, 0x56, 0x56, 0x21, 0x68, 0x35, 0x59,
	0xda, 0x4f, 0x82, 0x53, 0xd9, 0x40, 0xfc, 0x66, 0x48, 0xe3, 0x1a, 0x42, 0xc1, 0x59, 0x50, 0x04,
	0x55, 0xd4, 0x86, 0x82, 0xe3, 0x06, 0xf2, 0x41, 0xf4, 0x1f, 0x43, 0x27, 0x89, 0x85, 0x45, 0x50,
	0xad, 0xda, 0x5f, 0x5d, 0x7e, 0x05, 0x90, 0xbd, 0x90, 0x31, 0xdd, 0x9e, 0x4e, 0x7a, 0x57, 0x90,
	0xb9, 0x6f, 0x5b, 0xc1, 0x7d, 0x2d, 0x6a, 0x53, 0x27, 0x9f, 0x39, 0x5e, 0x42, 0x6a, 0x68, 0xe0,
	0xa4, 0x59, 0x34, 0xfb, 0xb3, 0x42, 0x06, 0x59, 0xaf, 0x06, 0x4b, 0x83, 0x65, 0xb1, 0xff, 0x73,
	0x94, 0x78, 0x0d, 0x2b, 0x97, 0xd9, 0x5a, 0x21, 0x89, 0x25, 0xbe, 0x94, 0x3b, 0xe3, 0x55, 0x48,
	0x2a, 0x33, 0x48, 0x1e, 0xe5, 0x68, 0x3f, 0xcb, 0x77, 0x48, 0x9e, 0xb4, 0x9a, 0xc6, 0x93, 0x25,
	0x08, 0xf1, 0x62, 0xbd, 0xbf, 0xf1, 0x06, 0x32, 0x49, 0x72, 0x47, 0xda, 0xb0, 0xa8, 0x88, 0xaa,
	0xff, 0xcd, 0x59, 0xfd, 0xc7, 0xa2, 0x76, 0x20, 0xda, 0x63, 0xa0, 0xb9, 0x87, 0xfc, 0xe1, 0xd0,
	0xd9, 0x56, 0x29, 0x89, 0xb7, 0x10, 0xbb, 0x1b, 0x2f, 0x96, 0xf1, 0x1f, 0x04, 0x9b, 0xf3, 0xa5,
	0x39, 0x8f, 0xfa, 0xb7, 0x4b, 0x3d, 0xea, 0xbb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x74,
	0x86, 0x58, 0x7c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatRoomClient is the client API for ChatRoom service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatRoomClient interface {
	Chat(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Empty, error)
}

type chatRoomClient struct {
	cc grpc.ClientConnInterface
}

func NewChatRoomClient(cc grpc.ClientConnInterface) ChatRoomClient {
	return &chatRoomClient{cc}
}

func (c *chatRoomClient) Chat(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/routeguide.ChatRoom/Chat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatRoomServer is the server API for ChatRoom service.
type ChatRoomServer interface {
	Chat(context.Context, *Message) (*Empty, error)
}

// UnimplementedChatRoomServer can be embedded to have forward compatible implementations.
type UnimplementedChatRoomServer struct {
}

func (*UnimplementedChatRoomServer) Chat(ctx context.Context, req *Message) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Chat not implemented")
}

func RegisterChatRoomServer(s *grpc.Server, srv ChatRoomServer) {
	s.RegisterService(&_ChatRoom_serviceDesc, srv)
}

func _ChatRoom_Chat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatRoomServer).Chat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/routeguide.ChatRoom/Chat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatRoomServer).Chat(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatRoom_serviceDesc = grpc.ServiceDesc{
	ServiceName: "routeguide.ChatRoom",
	HandlerType: (*ChatRoomServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Chat",
			Handler:    _ChatRoom_Chat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chatroom.proto",
}
